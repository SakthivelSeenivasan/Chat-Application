{"ast":null,"code":"var _jsxFileName = \"/home/vvdn/sai/src/Components/ContactList.js\";\nimport React, { useState, useRef } from 'react';\nimport ContactView from './ContactView';\nimport { v4 } from 'uuid';\nimport AddUser from './AddUser';\nimport Button from 'antd/es/button';\nimport Select from 'antd/es/select';\nimport Drawer from 'antd/es/drawer';\nimport { useEffect } from 'react';\nimport ContactBody from './ContactBody';\nimport { Col } from 'antd';\nconst colors = ['#29bf12', '#e6c229', '#f17105', '#d11149', '#6610f2', '#1a8fe3'];\nconst {\n  Option\n} = Select;\n\nconst randomNumber = () => {\n  return Math.ceil(Math.random() * colors.length);\n};\n\nconst ContactList = () => {\n  var _currentUserMsg$messa;\n\n  const [viewUser, setviewUser] = useState(0);\n  const [addUser, setAddUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [currentUserMsg, setCurrentUserMsg] = useState([]);\n  const [otherUser, setOtherUser] = useState(null);\n  const mainRef = useRef(null);\n  const [list, setList] = useState([{\n    key: v4(),\n    companyName: 'ABB Tech',\n    email: 'st2278@gmail.com',\n    fullName: 'John Doe',\n    phone: 8940651334,\n    avatarName: 'JD',\n    color: colors[randomNumber()]\n  }, {\n    key: v4(),\n    companyName: 'XYZ Tech',\n    email: 'sj@gmail.com',\n    fullName: 'Stuart John',\n    phone: 8940651334,\n    avatarName: 'SJ',\n    color: colors[randomNumber()]\n  }]);\n  const [curentUser, setCurrentUser] = useState(list[0]);\n  const [visible, setVisible] = useState(false);\n  const [message, setMessage] = useState('');\n  const mms = currentUserMsg === null || currentUserMsg === void 0 ? void 0 : currentUserMsg.messages;\n  useEffect(() => {\n    if (mainRef && mainRef.current) {\n      mainRef.current.scrollIntoView();\n    }\n  }, [mms]);\n\n  const addEditUser = (type, data, key) => {\n    if (type === 'add') {\n      setList([...list, data]);\n    } else {\n      const newList = list.map(li => {\n        if (li.key === key) {\n          return data;\n        }\n\n        return li;\n      });\n      setList(newList);\n    }\n  };\n\n  const editUser = (e, contact) => {\n    e.stopPropagation();\n    setAddUser(contact);\n  };\n\n  const sendMessage = () => {\n    if (messages === '') {\n      return;\n    }\n\n    let newMessages = messages;\n    let index = newMessages.findIndex(val => (val.key1 === curentUser.key || val.key2 === curentUser.key) && (val.key1 === otherUser.key || val.key2 === otherUser.key));\n\n    if (index >= 0) {\n      let newMessageData = { ...newMessages[index]\n      };\n      let messageQueue = [...newMessageData.messages];\n      messageQueue.push({\n        key: curentUser.key,\n        message: message,\n        id: v4()\n      });\n      newMessageData.messages = messageQueue;\n      newMessages[index] = newMessageData;\n      setCurrentUserMsg(newMessageData);\n      setMessages(newMessages);\n    } else {\n      let newMessageData = {\n        key1: curentUser.key,\n        key2: otherUser.key,\n        messages: [{\n          key: curentUser.key,\n          message: message,\n          id: v4()\n        }]\n      };\n      newMessages.push(newMessageData);\n      setCurrentUserMsg(newMessageData);\n      setMessages(newMessages);\n    }\n\n    setMessage('');\n  };\n\n  const setMessageData = otherUsr => {\n    let newMessages = messages.filter(val => (val.key1 === curentUser.key || val.key2 === curentUser.key) && (val.key1 === otherUsr.key || val.key2 === otherUsr.key));\n\n    if (newMessages.length) {\n      setCurrentUserMsg(newMessages[0]);\n    } else {\n      setCurrentUserMsg([]);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add__user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    theme: \"dark\",\n    mode: \"horizontal\",\n    defaultSelectedKeys: ['2'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, \"nav 1\"), /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, \"nav 2\"), /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, \"nav 3\")), /*#__PURE__*/React.createElement(Select, {\n    value: curentUser.key,\n    className: \"select-after\",\n    onChange: e => {\n      const user = list.find(val => val.key === e);\n      setCurrentUser(user);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, list.map(usVal => /*#__PURE__*/React.createElement(Option, {\n    key: usVal.key,\n    value: usVal.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, usVal.fullName))), /*#__PURE__*/React.createElement(AddUser, {\n    randomNumber: randomNumber,\n    colors: colors,\n    addEditUser: addEditUser,\n    addUser: addUser,\n    editUser: editUser,\n    setAddUser: setAddUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 16,\n    md: 16,\n    sm: 24,\n    xs: 24,\n    style: {\n      padding: '16px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  }, \"Full Name\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  }, \"Company Name\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }, \"Phone\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 19\n    }\n  }, \"Edit\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 19\n    }\n  }, \"Message\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ContactBody, {\n    list: list,\n    curentUser: curentUser,\n    setviewUser: setviewUser,\n    editUser: editUser,\n    setOtherUser: setOtherUser,\n    setVisible: setVisible,\n    setMessageData: setMessageData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    lg: 8,\n    mg: 8,\n    sm: 12,\n    xs: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    title: otherUser === null || otherUser === void 0 ? void 0 : otherUser.fullName,\n    placement: \"right\",\n    closable: false,\n    onClose: () => setVisible(false),\n    visible: visible,\n    width: '90%',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, currentUserMsg === null || currentUserMsg === void 0 ? void 0 : (_currentUserMsg$messa = currentUserMsg.messages) === null || _currentUserMsg$messa === void 0 ? void 0 : _currentUserMsg$messa.map((msg, index) => {\n    let alignMsg = msg.key === curentUser.key ? 'flex-end' : 'flex-start';\n\n    if ((currentUserMsg === null || currentUserMsg === void 0 ? void 0 : currentUserMsg.messages.length) === index + 1) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: msg.id,\n        className: \"message__bg\",\n        style: {\n          alignSelf: alignMsg\n        },\n        ref: mainRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 23\n        }\n      }, msg.message);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: msg.id,\n      className: \"message__bg\",\n      style: {\n        alignSelf: alignMsg\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }\n    }, msg.message);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"send__massage--cotainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"message__input\",\n    onSubmit: e => {\n      e.preventDefault();\n      sendMessage();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Message\",\n    value: message,\n    onChange: e => setMessage(e.target.value),\n    className: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 19\n    }\n  }, \"Send\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact__view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ContactView, {\n    contact: list[viewUser] || null,\n    color: randomNumber(),\n    colors: colors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default ContactList;","map":{"version":3,"sources":["/home/vvdn/sai/src/Components/ContactList.js"],"names":["React","useState","useRef","ContactView","v4","AddUser","Button","Select","Drawer","useEffect","ContactBody","Col","colors","Option","randomNumber","Math","ceil","random","length","ContactList","viewUser","setviewUser","addUser","setAddUser","messages","setMessages","currentUserMsg","setCurrentUserMsg","otherUser","setOtherUser","mainRef","list","setList","key","companyName","email","fullName","phone","avatarName","color","curentUser","setCurrentUser","visible","setVisible","message","setMessage","mms","current","scrollIntoView","addEditUser","type","data","newList","map","li","editUser","e","contact","stopPropagation","sendMessage","newMessages","index","findIndex","val","key1","key2","newMessageData","messageQueue","push","id","setMessageData","otherUsr","filter","user","find","usVal","padding","msg","alignMsg","alignSelf","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\n\nimport ContactView from './ContactView';\nimport { v4 } from 'uuid';\nimport AddUser from './AddUser';\nimport Button from 'antd/es/button';\nimport Select from 'antd/es/select';\nimport Drawer from 'antd/es/drawer';\nimport { useEffect } from 'react';\nimport ContactBody from './ContactBody';\nimport { Col } from 'antd';\n\nconst colors = [\n  '#29bf12',\n  '#e6c229',\n  '#f17105',\n  '#d11149',\n  '#6610f2',\n  '#1a8fe3',\n];\n\nconst { Option } = Select;\nconst randomNumber = () => {\n  return Math.ceil(Math.random() * colors.length);\n};\n\nconst ContactList = () => {\n  const [viewUser, setviewUser] = useState(0);\n  const [addUser, setAddUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [currentUserMsg, setCurrentUserMsg] = useState([]);\n  const [otherUser, setOtherUser] = useState(null);\n  const mainRef = useRef(null);\n  const [list, setList] = useState([\n    {\n      key: v4(),\n      companyName: 'ABB Tech',\n      email: 'st2278@gmail.com',\n      fullName: 'John Doe',\n      phone: 8940651334,\n      avatarName: 'JD',\n      color: colors[randomNumber()],\n    },\n    {\n      key: v4(),\n      companyName: 'XYZ Tech',\n      email: 'sj@gmail.com',\n      fullName: 'Stuart John',\n      phone: 8940651334,\n      avatarName: 'SJ',\n      color: colors[randomNumber()],\n    },\n  ]);\n\n  const [curentUser, setCurrentUser] = useState(list[0]);\n  const [visible, setVisible] = useState(false);\n  const [message, setMessage] = useState('');\n\n  const mms = currentUserMsg?.messages;\n\n  useEffect(() => {\n    if (mainRef && mainRef.current) {\n      mainRef.current.scrollIntoView();\n    }\n  }, [mms]);\n\n  const addEditUser = (type, data, key) => {\n    if (type === 'add') {\n      setList([...list, data]);\n    } else {\n      const newList = list.map((li) => {\n        if (li.key === key) {\n          return data;\n        }\n        return li;\n      });\n      setList(newList);\n    }\n  };\n\n  const editUser = (e, contact) => {\n    e.stopPropagation();\n    setAddUser(contact);\n  };\n\n  const sendMessage = () => {\n    if (messages === '') {\n      return;\n    }\n    let newMessages = messages;\n    let index = newMessages.findIndex(\n      (val) =>\n        (val.key1 === curentUser.key || val.key2 === curentUser.key) &&\n        (val.key1 === otherUser.key || val.key2 === otherUser.key)\n    );\n\n    if (index >= 0) {\n      let newMessageData = { ...newMessages[index] };\n      let messageQueue = [...newMessageData.messages];\n      messageQueue.push({ key: curentUser.key, message: message, id: v4() });\n      newMessageData.messages = messageQueue;\n      newMessages[index] = newMessageData;\n      setCurrentUserMsg(newMessageData);\n      setMessages(newMessages);\n    } else {\n      let newMessageData = {\n        key1: curentUser.key,\n        key2: otherUser.key,\n        messages: [{ key: curentUser.key, message: message, id: v4() }],\n      };\n      newMessages.push(newMessageData);\n      setCurrentUserMsg(newMessageData);\n      setMessages(newMessages);\n    }\n    setMessage('');\n  };\n\n  const setMessageData = (otherUsr) => {\n    let newMessages = messages.filter(\n      (val) =>\n        (val.key1 === curentUser.key || val.key2 === curentUser.key) &&\n        (val.key1 === otherUsr.key || val.key2 === otherUsr.key)\n    );\n\n    if (newMessages.length) {\n      setCurrentUserMsg(newMessages[0]);\n    } else {\n      setCurrentUserMsg([]);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"add__user\">\n        <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n          <Menu.Item key=\"1\">nav 1</Menu.Item>\n          <Menu.Item key=\"2\">nav 2</Menu.Item>\n          <Menu.Item key=\"3\">nav 3</Menu.Item>\n        </Menu>\n        <Select\n          value={curentUser.key}\n          className=\"select-after\"\n          onChange={(e) => {\n            const user = list.find((val) => val.key === e);\n            setCurrentUser(user);\n          }}\n        >\n          {list.map((usVal) => (\n            <Option key={usVal.key} value={usVal.key}>\n              {usVal.fullName}\n            </Option>\n          ))}\n        </Select>\n\n        <AddUser\n          randomNumber={randomNumber}\n          colors={colors}\n          addEditUser={addEditUser}\n          addUser={addUser}\n          editUser={editUser}\n          setAddUser={setAddUser}\n        />\n      </div>\n      <div className=\"container\">\n        <Col lg={16} md={16} sm={24} xs={24} style={{ padding: '16px' }}>\n          <table>\n            <thead>\n              <tr>\n                <th>\n                  <h3>Full Name</h3>\n                </th>\n                <th>\n                  <h3>Company Name</h3>\n                </th>\n                <th>\n                  <h3>Phone</h3>\n                </th>\n                <th>\n                  <h3>Edit</h3>\n                </th>\n                <th>\n                  <h3>Message</h3>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <ContactBody\n                list={list}\n                curentUser={curentUser}\n                setviewUser={setviewUser}\n                editUser={editUser}\n                setOtherUser={setOtherUser}\n                setVisible={setVisible}\n                setMessageData={setMessageData}\n              />\n            </tbody>\n          </table>\n        </Col>\n\n        <Col lg={8} mg={8} sm={12} xs={24}>\n          <Drawer\n            title={otherUser?.fullName}\n            placement=\"right\"\n            closable={false}\n            onClose={() => setVisible(false)}\n            visible={visible}\n            width={'90%'}\n          >\n            <div className=\"message__container\">\n              <div className=\"messages\">\n                {currentUserMsg?.messages?.map((msg, index) => {\n                  let alignMsg =\n                    msg.key === curentUser.key ? 'flex-end' : 'flex-start';\n                  if (currentUserMsg?.messages.length === index + 1) {\n                    return (\n                      <div\n                        key={msg.id}\n                        className=\"message__bg\"\n                        style={{ alignSelf: alignMsg }}\n                        ref={mainRef}\n                      >\n                        {msg.message}\n                      </div>\n                    );\n                  }\n                  return (\n                    <div\n                      key={msg.id}\n                      className=\"message__bg\"\n                      style={{ alignSelf: alignMsg }}\n                    >\n                      {msg.message}\n                    </div>\n                  );\n                })}\n              </div>\n              <div className=\"send__massage--cotainer\">\n                <form\n                  className=\"message__input\"\n                  onSubmit={(e) => {\n                    e.preventDefault();\n                    sendMessage();\n                  }}\n                >\n                  <input\n                    type=\"text\"\n                    placeholder=\"Message\"\n                    value={message}\n                    onChange={(e) => setMessage(e.target.value)}\n                    className=\"message\"\n                  />\n\n                  <Button type=\"primary\" onClick={sendMessage}>\n                    Send\n                  </Button>\n                </form>\n              </div>\n            </div>\n          </Drawer>\n\n          <div className=\"contact__view\">\n            <ContactView\n              contact={list[viewUser] || null}\n              color={randomNumber()}\n              colors={colors}\n            />\n          </div>\n        </Col>\n      </div>\n    </>\n  );\n};\n\nexport default ContactList;\n"]},"metadata":{},"sourceType":"module"}